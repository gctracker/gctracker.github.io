{"version":3,"sources":["useWindowDimensions.js","util.js","About.js","ReadMore.js","Statics.js","useFetch.js","FieldOffices.js","Rankings.js","CaseSamples.js","JSONTable.js","SparkLines.js","Home.js","RenderForm.js","Routes.js","App.js","reportWebVitals.js","index.js"],"names":["getWindowDimensions","window","width","innerWidth","height","innerHeight","useWindowDimensions","useState","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","trimLines","text","_","join","map","split","trimStart","make_layout","layout","id","updates","autosize","margin","l","t","r","includes","showlegend","mapbox","zoom","xaxis","fixedrange","yaxis","legend","orientation","yanchor","y","xanchor","x","merge","slugify","label","replace","WidthLimitedLayout","props","className","style","maxWidth","children","WidthLimitedLayoutBigger","About","trim","ReadMore","open","setOpen","Collapse","in","Button","onClick","variant","padding","PUBLIC_URL","Plot","createPlotlyComponent","Plotly","Form","FORM_LONG_NAMES","FORM_DESCRIPTIONS","DISCLAIMER","ALL_FORM_TYPES","Loading","display","justifyContent","Spinner","animation","role","useFetch","url","response","setResponse","loading","setLoading","axios","get","then","resp","data","ym","FieldOfficesRedirect","location_code","localStorage","getItem","location_label","to","FieldOffices","useParams","history","useHistory","info","console","log","isEmpty","options","sortBy","values","value","keyBy","fo_info","fo","heat_map","JSON","parse","cal_heat_map","local","localOfficeInfo","Card","marginBottom","Body","Title","fullName","Subtitle","districtOfficeInfo","locationCode","Text","address","city","state","i485_times","size","size_label","median","toFixed","max","Alert","size_relative_ranking","upperFirst","isNull","size_absolute_ranking","value_sample","type","useResizeHandler","config","displayModeBar","showTips","title","overflowX","minWidth","Group","controlId","Label","target","rel","href","Control","as","defaultValue","onChange","event","setItem","push","custom","opt","compareBasic","a","b","sortByValueThenOrigIndex","rowA","rowB","col","result","index","Table","columns","limit","useTable","initialState","desc","useSortBy","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","firstPageRows","slice","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","float","marginLeft","marginTop","icon","isSorted","isSortedDesc","faSortDown","faSortUp","faSort","render","row","i","getRowProps","cells","cell","getCellProps","Math","min","length","Rankings","xsmall","small","medium","large","setXSmall","setSmall","setMedium","setLarge","location_code_map","accessor","Cell","Header","sortType","SIZE_BADGE_MAP","disableSortBy","Badge","sizes","filter","paddingBottom","Check","inline","checked","medianReceiptDate","dates","sort","mid","floor","mid_before","date_1","Date","date_2","getTime","toISOString","replVal","GlobalFilter","globalFilter","setGlobalFilter","React","setValue","useAsyncDebounce","undefined","newVal","DefaultColumnFilter","filterValue","preFilteredRows","setFilter","e","placeholder","filterTypes","useMemo","rowValue","String","toLowerCase","startsWith","defaultColumn","Filter","pageSize","hiddenColumns","useFilters","useGlobalFilter","usePagination","page","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","pageIndex","visibleColumns","preGlobalFilteredRows","colSpan","textAlign","border","verticalAlign","canFilter","Pagination","First","disabled","Prev","Next","Last","Number","CaseSamples","JSONTable","other","toUpperCase","SparkLines","lookback_ago","ago_value","sparkWidth","spark_values","at","range","mode","line","color","pad","visible","staticPlot","pct","prec","CurrentlyProcessingTable","dt","d","ye","Intl","DateTimeFormat","year","format","mo","month","da","day","Container","Row","Col","Home","last_updated","stat","raw","rolling","displayNames","cards_mailed","gcs_mailed","wps_mailed","i130s_approved","approval_rate","plotData","keys","marker","name","shape","sparkTdWidth","LOOKBACK","displayName","stat_name","stat_map","cur_value","nth","change","formatted_cur_value","change_plus","letterSpacing","fontSize","fontWeight","exact","activeClassName","position","left","top","currently_processing_table","RenderForm","form","rendered_graphs","form_data","plot_visible","render_jumbo","fig","figure","sub_render","sub_table","bordered","render_sub_table","all_annotations","annotations","ann","render_form","Jumbotron","Routes","path","FORM_NAV_DISPLAY","BottomNav","hidden","setHidden","hide","Navbar","fixed","bg","flexWrap","paddingTop","EmailForm","email_ref","useRef","onSubmit","preventDefault","stopPropagation","jsonp","encodeURIComponent","current","param","err","error","message","alert","FormControl","ref","App","expand","collapseOnSelect","Brand","Nav","Link","accounts","version","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9f0e6aa7.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\n\nfunction getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height\n  };\n}\n\nexport default function useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return windowDimensions;\n}\n\n","import _ from \"lodash\";\n\nfunction trimLines(text) {\n  return _.join(_.map(_.split(text, \"\\n\"), _.trimStart), \"\\n\");\n}\n\nfunction make_layout(layout, width, id) {\n  let updates =\n    width > 1024\n      ? {}\n      : {\n          autosize: true,\n          margin: {\n            l: 0,\n            t: 0,\n            r: _.includes(id, \"approval\") ? 40 : 10,\n          },\n          showlegend: !_.includes([\"status_by_month_num\", \"fo_distplot\"], id),\n          mapbox: { zoom: 2 },\n          xaxis: { fixedrange: true },\n          yaxis: { fixedrange: true },\n          legend: {\n            orientation: \"h\",\n            yanchor: \"bottom\",\n            y: 1.02,\n            xanchor: \"right\",\n            x: 1,\n          },\n        };\n\n  return _.merge(layout || {}, updates);\n}\n\nfunction plot_visible(form, id, width) {\n  if (width < 1024) {\n    if (id === \"fo_box_plot\") {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction slugify(label) {\n  return _.replace(_.replace(label, \", \", \",\"), / /g, \"_\");\n}\n\nfunction WidthLimitedLayout(props) {\n  return (\n    <div className=\"daddy container-fluid\">\n      <div className=\"row py-3\">\n        <div\n          id=\"main\"\n          className=\"col-sm-12 offset-sm-0 col-lg-8 offset-lg-2 col-xl-6 offset-xl-3\"\n        >\n          <div className=\"page-content\" style={{ maxWidth: 960, margin: \"0 auto\" }}>\n            {props.children}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction WidthLimitedLayoutBigger(props) {\n  return (\n    <div className=\"daddy container-fluid\">\n      <div className=\"row py-3\">\n        <div\n          id=\"main\"\n          className=\"col-sm-12 offset-sm-0\"\n        >\n          <div className=\"page-content\" style={{ maxWidth: 1200, margin: \"0 auto\" }}>\n            {props.children}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport { trimLines, make_layout, plot_visible, slugify, WidthLimitedLayout, WidthLimitedLayoutBigger };\n","import ReactMarkdown from \"react-markdown\";\nimport _ from \"lodash\";\nimport { WidthLimitedLayout } from \"./util\";\n\nexport default function About() {\n  return (\n    <WidthLimitedLayout>\n      <ReactMarkdown\n        children={_.trim(`\nAbout\n============\n\nThis website was created in order to answer two simple questions:\n\n1. What is USCIS up to?\n2. How long will my case take?\n\nGoing through the immigration process can be an extremely stressful\nexperience. The long waits and the relative lack of\ninformation from USCIS means many immigrants worry daily about how their\ncase will pan out.\n\nThe information presented on this website hopefully manages to ease immigrant's fears somewhat, 3 things are clear:\n\n1. USCIS receives thousands of applications every day\n2. USCIS approves thousands of applications every day\n3. Approval rates for almost all petition types are very high 🎉\n\nIf you'd like to send us feedback, questions or suggestions, you can reach us at <info@greencardly.com>. Otherwise, good luck on your journey! 😊\n\nHelping\n============\n\nA few people have now asked for me to add a Donations button -- I really appreciate the sentiment but our motivation in running the site is purely in helping\nother immigrants. If you'd like to help nonetheless our biggest challenge currently is promoting the site: We simply don't have the time or resources to do it. If you could, please share the website with friends and on social networks such as:\n\n1. Facebook (various immigration related groups, such as [1](https://www.facebook.com/groups/176839752725232), [2](https://www.facebook.com/groups/f4usa/), [3](https://www.facebook.com/groups/297983330378608/), [4](https://www.facebook.com/groups/2506012242996518/), [5](https://www.facebook.com/groups/ImmigrationtoUSA/), [6](https://www.facebook.com/groups/2225781547680600/), etc.)\n2. Online forums (such as [VisaJourney](https://www.visajourney.com/), [ImmiHelp](https://www.immihelp.com/forum/))\n3. Reddit ([r/USCIS](https://www.reddit.com/r/USCIS/), [r/immigration](http://reddit.com/r/immigration))\n4. Twitter\n\nThank you! ❤️ Also make sure to follow the rules of the respective forums / platforms!\n\nFAQ\n===\n\nQ: **Where is your data from?**  \nA: The vast majority of the data is sourced from USCIS.gov\n\nQ: **Why are there so few cases received in recent months?**  \nA: We only receive data once USCIS has generated a receipt notice. USCIS currently can take up to 2 months to\ngenerate receipt notices for Forms I-485 and I-751 which can delay their showing up in this chart.\n\nQ: **Can you include data for Form I-XYZ?**  \nA: Probably, send us an email and we'll see what we can do.\n\nQ: **How often do you update the data?**  \nA: The app is updated every day in the mornings E.T.\n\nQ: **Can you add a breakdown for family-based vs employment-based Green Cards?**  \nA: The processing times are not vastly different and difficult to distinguish from our data. Green Card Cases without an interview go about 3 months faster in the median case and in the 90% case take roughly as long as other cases.\n\nQ: **Can you add a chart that shows processing times changing over time?**  \nA: Processing Times change very slowly and so this kind of chart is less interesting than people might think. Processing Times getting faster or slower might also not indicate what you think it does (e.g. it might be related to USCIS going back to process slightly older cases or due to some seasonality when e.g. OPT petitions are filed).\n`)}\n      />\n    </WidthLimitedLayout>\n  );\n}\n","import { useState } from \"react\";\nimport { Button, Collapse } from \"react-bootstrap\";\n\nexport default function ReadMore({ children }) {\n  const [open, setOpen] = useState(false);\n  return (\n    <span style={{ margin: \"0 10px\" }}>\n      <Collapse in={open}>\n        <div id=\"collapse-text\">{children}</div>\n      </Collapse>\n      <Button\n        onClick={() => setOpen(!open)}\n        aria-controls=\"collapse-text\"\n        aria-expanded={open}\n        variant=\"link\"\n        style={{ padding: 0 }}\n      >\n        {open ? \"Read less\" : \"Read more\"}\n      </Button>\n    </span>\n  );\n}\n","import ReadMore from \"./ReadMore.js\";\nimport createPlotlyComponent from \"react-plotly.js/factory\";\nimport { Spinner } from \"react-bootstrap\";\n\nconst Plot = createPlotlyComponent(window.Plotly);\n\nlet PUBLIC_URL;\nconst DEBUG = process.env.NODE_ENV === \"development\";\nif (DEBUG) {\n  PUBLIC_URL = \"http://localhost:8050/\";\n} else {\n  PUBLIC_URL = process.env.PUBLIC_URL + \"/data/\";\n}\n\nconst Form = {\n  I129: \"I-129\",\n  I130: \"I-130\",\n  I131: \"I-131\",\n  I140: \"I-140\",\n  I485: \"I-485\",\n  I751: \"I-751\",\n  I765: \"I-765\",\n  N400: \"N-400\",\n};\n\nconst FORM_LONG_NAMES = {\n  \"I-485\":\n    \"Form I-485, Application to Register Permanent Residence or Adjust Status (a.k.a. Green Card)\",\n  \"I-130\": \"Form I-130, Petition for Alien Relative\",\n  \"I-765\":\n    \"Form I-765, Application for Employment Authorization  (a.k.a. Work Permit)\",\n  \"I-131\": \"Form I-131, Application for Travel Document\",\n  \"I-140\": \"Form I-140, Immigrant Petition for Alien Workers\",\n  \"I-751\": \"Form I-751, Petition to Remove Conditions on Residence\",\n  \"N-400\": \"Form N-400, Application for Naturalization\",\n};\n\nconst FORM_DESCRIPTIONS = {\n  \"I-485\": (\n    <div>\n      <div>\n        Form I-485 is used to either register for permanent legal residence in\n        the United States or adjust to permanent resident status.\n        <ReadMore>\n          Adjusting to permanent resident status simply means obtaining a green\n          card (i.e. permanent legal residency) without having to return to your\n          home country if you’re already in the United States. An applicant can\n          file an I-485 based on seven major categories:\n          <ul>\n            <li>family-based</li>\n            <li>employment-based</li>\n            <li>special immigrant</li>\n            <li>asylum or refugee</li>\n            <li>human trafficking victim or crime victim</li>\n            <li>special programs</li>\n            <li>additional options</li>\n          </ul>\n        </ReadMore>\n      </div>\n    </div>\n  ),\n  \"I-130\": (\n    <div>\n      This form is used by a U.S. citizen or lawful permanent resident (LPR) to\n      establish their relationship to an eligible relative who wishes to come to\n      or remain in the United States permanently and get a Green Card.\n      <ReadMore>\n        In the context of a marriage visa, the I-130 petition is filed to prove\n        that your marriage is legally valid (based on a marriage certificate).\n        This is also the phase of the marriage-based green card process in which\n        you submit documents (for example, joint bank account statements, joint\n        insurance documents, and photos together) to prove that your marriage is\n        \"authentic\" — that is, it isn’t based on fraud.\n      </ReadMore>\n    </div>\n  ),\n  \"I-765\": (\n    <div>\n      The Form I-765 is a request for an Employment Authorization Document or\n      EAD, which is more commonly known as a work permit.\n      <ReadMore>\n        U.S. employers must check to make sure all employees, regardless of\n        citizenship or national origin, are allowed to work in the United\n        States. Having an Employment Authorization Document is one way to prove\n        that you are allowed to work in the United States for a specific time\n        period. <br />\n        <br />\n        You may apply for an EAD if you:\n        <ul>\n          <li>\n            Are authorized to work in the United States because of your\n            immigration status (for example, you are an asylee, refugee, or U\n            nonimmigrant), or\n          </li>\n          <li>\n            You have a pending Form I-485, Application to Register Permanent\n            Residence or Adjust Status.\n          </li>\n          <li>\n            You have a pending Form I-589, Application for Asylum and for\n            Withholding of Removal.\n          </li>\n          <li>\n            You have a nonimmigrant status but are allowed to work via e.g. F-1\n            Optional Practical Training (OPT)\n          </li>\n        </ul>\n      </ReadMore>\n    </div>\n  ),\n  \"I-131\": (\n    <div>\n      The I-131 \"Advance Parole\" travel document allows someone living in the\n      U.S. while awaiting their green card to travel abroad without nullifying\n      their green card application.\n      <br />\n      The I-131 is also used as a re-entry permit for GC holders for prolonged\n      absences from the US or as a Refugee Travel Document.\n    </div>\n  ),\n  \"I-140\": (\n    <div>\n      Form I-140 is used by a prospective employer to petition for an alien to\n      work in the US on a permanent basis. This is done when the worker is\n      deemed extraordinary in some sense or when qualified workers do not exist\n      in the US.\n    </div>\n  ),\n  \"I-751\": (\n    <div>\n      Form I-751 (officially called the \"Petition to Remove Conditions on\n      Residence\") is a form used to upgrade a 2-year conditional green card to a\n      full 10-year green card.\n      <ReadMore>\n        This process is called \"removing the conditions\" on the marriage-based\n        green card and is important because a conditional green card otherwise\n        expires after 2 years. Conditional (or \"CR-1\") green cards are issued to\n        people who have been married less than 2 years when they gain permanent\n        residence through marriage to a U.S. citizen or green card holder.\n      </ReadMore>\n    </div>\n  ),\n  \"N-400\": (\n    <div>\n      Filing Form N-400 with USCIS is the first step of \"naturalization,\" the\n      process of becoming an American citizen. 🇺🇸\n      <ReadMore>\n        It is used by green card holders who are ready to apply after meeting\n        certain eligibility requirements. In general, you must be at least 18\n        years old and have had a green card for five years (or three years if\n        you’re married to a U.S. citizen) — unless you’re applying based on\n        qualifying military service.\n      </ReadMore>\n    </div>\n  ),\n};\n\nconst DISCLAIMER = (\n  <div>\n    <h3>Disclaimer</h3>\n    <small>\n      The information on this site is provided as is, without any assurances as\n      to its accuracy or suitability for any purpose. Our data is prone to\n      errors, outages, and other defects. It likely underestimates true case volume at\n      USCIS by a factor of approximately 2. We assume no responsibility for any decisions\n      made on the basis of the content presented on this site. The data for\n      these calculations is somewhat noisy due to data imputation (approximating\n      when a case was received based on when cases with similar Case IDs were\n      received), it also summarizes a lot of different cases. The scope of\n      USCIS's responsibilities is vast. Note that any one case can be faster or\n      slower than the times listed here for a multitude of reasons.\n    </small>\n  </div>\n);\n\nconst ALL_FORM_TYPES = [\n  Form.I485,\n  Form.I765,\n  Form.I130,\n  // Form.I131,\n  Form.I140,\n  Form.I751,\n  Form.N400,\n];\n\nconst Loading = () => (\n  <div style={{ display: \"flex\", justifyContent: \"center\", padding: \"10vh 0\" }}>\n    <Spinner animation=\"border\" role=\"status\">\n      <span className=\"sr-only\">Loading...</span>\n    </Spinner>\n  </div>\n);\n\nexport {\n  Plot,\n  Form,\n  FORM_LONG_NAMES,\n  FORM_DESCRIPTIONS,\n  DISCLAIMER,\n  ALL_FORM_TYPES,\n  Loading,\n  DEBUG,\n  PUBLIC_URL,\n};\n","import axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport ym from \"react-yandex-metrika\";\n\nexport default function useFetch(url) {\n  const [response, setResponse] = useState({});\n  const [loading, setLoading] = useState(true);\n\n  let fetchData = () => {\n    setLoading(true);\n    axios.get(url).then(\n      (resp) => {\n        setResponse(resp.data);\n        setLoading(false);\n        ym(\"hit\", url);\n      },\n      () => {}\n    );\n  };\n\n  useEffect(fetchData, [url]);\n  return { response, loading };\n}\n","import React from \"react\";\n\nimport _ from \"lodash\";\nimport { useParams, useHistory, Redirect } from \"react-router-dom\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { Card, Alert, Button, Form } from \"react-bootstrap\";\n\nimport { make_layout, slugify, WidthLimitedLayout } from \"./util.js\";\n\nimport { Plot, Loading, PUBLIC_URL, DISCLAIMER } from \"./Statics.js\";\nimport useWindowDimensions from \"./useWindowDimensions.js\";\nimport useFetch from \"./useFetch.js\";\n\nimport \"./App.css\";\n\nfunction FieldOfficesRedirect() {\n  const location_code = localStorage.getItem(\"fieldOfficeValue\") || \"BOS\"; // Boston is default\n  const location_label =\n    localStorage.getItem(\"fieldOfficeLabel\") || \"Boston,MA\"; // Boston is default\n  return (\n    <Redirect\n      to={`/field_offices/${location_code}/${slugify(location_label)}`}\n    />\n  );\n}\n\nfunction FieldOffices() {\n  const { width } = useWindowDimensions();\n  let { location_code } = useParams();\n\n  const url = `${PUBLIC_URL}field_offices.json`;\n  const { response, loading } = useFetch(url);\n  const history = useHistory();\n\n  let info = response.info;\n  console.log(location_code, info);\n\n  if (loading) {\n    return <Loading />;\n  }\n\n  if (_.isEmpty(info)) {\n    return null;\n  }\n\n  let options = _.sortBy(\n    _.map(_.values(info), (value) => {\n      return {\n        value: value[\"localOfficeInfo\"][\"locationCode\"],\n        label: value[\"localOfficeInfo\"][\"fullName\"],\n      };\n    }),\n    \"label\"\n  );\n\n  info = _.keyBy(info, \"localOfficeInfo.locationCode\");\n\n  let fo_info = null;\n  if (location_code) {\n    let fo = info[location_code];\n    let heat_map = JSON.parse(fo.cal_heat_map);\n\n    let local = fo.localOfficeInfo;\n    fo_info = (\n      <div>\n        <Card style={{ width: \"18rem\", marginBottom: \"2rem\" }}>\n          <Card.Body>\n            <Card.Title>{local.fullName}</Card.Title>\n            <Card.Subtitle className=\"mb-2 text-muted\">\n              {fo.districtOfficeInfo.locationCode ===\n              fo.localOfficeInfo.locationCode\n                ? \"District Office\"\n                : \"Field Office\"}\n            </Card.Subtitle>\n            <Card.Text>\n              {local.address}\n              <br />\n              {local.city}, {local.state}\n            </Card.Text>\n          </Card.Body>\n        </Card>\n        {!fo.i485_times ? null : (\n          <>\n            <h4>Green Card Processing Times</h4>\n            <p>\n              {local.fullName} has approved{\" \"}\n              <strong>{fo.i485_times.size} Green Cards</strong> in the past 90\n              days, which makes it a{\" \"}\n              {_.replace(fo.i485_times.size_label, \"xsmall\", \"very small\")}{\" \"}\n              Field Office.\n            </p>\n            <p>\n              The current median processing time is{\" \"}\n              <strong>{fo.i485_times.median.toFixed(1)} months</strong>, which\n              means that 50% of approvals were faster than that, and 50% were\n              slower. This is an estimate for an average case for this Field\n              Office.\n            </p>\n            <p>\n              The current Top 90% processing time is{\" \"}\n              <strong>{fo.i485_times.max.toFixed(1)} months</strong>, which\n              means that 90% of approvals were faster than that, and 10% were\n              slower. This is an estimate for a slow case for this Field Office.\n            </p>\n            <p>\n              Processing Times indicate Form I-485 approvals within the past 90\n              days, measured from estimated receipt date to approval date.\n            </p>\n            <h5>In Rankings:</h5>\n            <Alert variant=\"primary\">\n              <LinkContainer to={`/rankings/${fo.size_label}`}>\n                <Button className=\"black\" variant=\"link\">\n                  <strong>#{fo.size_relative_ranking}</strong> of{\" \"}\n                  {_.upperFirst(\n                    _.replace(fo.size_label, \"xsmall\", \"Very Small\")\n                  )}{\" \"}\n                  Field Offices\n                </Button>\n              </LinkContainer>\n            </Alert>\n            {_.isNull(fo.size_absolute_ranking) ? null : (\n              <Alert variant=\"success\">\n                <LinkContainer to=\"/rankings\">\n                  <Button className=\"black\" variant=\"link\">\n                    <strong>#{fo.size_absolute_ranking}</strong> of all Field\n                    Offices\n                  </Button>\n                </LinkContainer>\n              </Alert>\n            )}\n            <h4>Distribution of Processing Times</h4>\n            <Plot\n              data={[\n                {\n                  x: fo.value_sample,\n                  type: \"histogram\",\n                },\n              ]}\n              useResizeHandler={true}\n              style={{ width: \"100%\", height: \"100%\" }}\n              config={{ displayModeBar: false, showTips: false }}\n              layout={make_layout(\n                {\n                  margin: { t: 0 },\n                  xaxis: { title: \"Processing Time in months\" },\n                  yaxis: { title: \"Green Cards approved\" },\n                },\n                width,\n                \"fo_distplot\"\n              )}\n            />\n            <h4>Which Receipt Dates are currently being processed?</h4>\n            <div style={{ overflowX: \"scroll\" }}>\n              <Plot\n                data={heat_map.data}\n                style={{ minWidth: 750, width: \"100%\" }}\n                // layout={make_layout(heat_map.layout, width)}\n                layout={heat_map.layout}\n                config={{ displayModeBar: false, showTips: false }}\n              />\n            </div>\n            <p>\n              This chart shows which Receipt dates for I-485 applications have\n              been approved in the last 90 days. This allows you to see roughly\n              when cases that are currently being processed have been filed.\n              Take note that some I-485 applications (such as employment-based\n              ones) may process faster than others.\n            </p>\n          </>\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <WidthLimitedLayout>\n      <h1>Field Offices</h1>\n      <Form>\n        <Form.Group controlId=\"exampleForm.SelectCustomSizeLg\">\n          <Form.Label>\n            Select your Field Office (\n            <a\n              target=\"_blank\"\n              rel=\"noreferrer\"\n              href=\"https://www.uscis.gov/about-us/find-a-uscis-office/field-offices#district-search-form\"\n            >\n              Which is my Field Office?\n            </a>\n            )\n          </Form.Label>\n          <Form.Control\n            as=\"select\"\n            size=\"lg\"\n            defaultValue={location_code}\n            onChange={(event) => {\n              let value = event.target.value;\n              let label = info[value].localOfficeInfo.fullName;\n              localStorage.setItem(\"fieldOfficeValue\", value);\n              localStorage.setItem(\"fieldOfficeLabel\", label);\n\n              history.push(`/field_offices/${value}/${slugify(label)}`);\n            }}\n            custom\n          >\n            {_.map(options, (opt) => (\n              <option key={opt.value} value={opt.value}>\n                {opt.label}\n              </option>\n            ))}\n          </Form.Control>\n        </Form.Group>\n      </Form>\n\n      {fo_info}\n      {DISCLAIMER}\n    </WidthLimitedLayout>\n  );\n}\n\nexport { FieldOfficesRedirect, FieldOffices };\n","import React, { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport _ from \"lodash\";\nimport { Loading, PUBLIC_URL, DISCLAIMER } from \"./Statics.js\";\nimport useWindowDimensions from \"./useWindowDimensions.js\";\nimport useFetch from \"./useFetch.js\";\nimport ReadMore from \"./ReadMore.js\";\nimport { slugify, WidthLimitedLayout } from \"./util.js\";\n\nimport \"./App.css\";\n\nimport { Table as BootyTable, Form, Badge, Button } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { useTable, useSortBy } from \"react-table\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faSort,\n  faSortUp,\n  faSortDown,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nfunction compareBasic(a, b) {\n  return a === b ? 0 : a > b ? 1 : -1;\n}\nlet sortByValueThenOrigIndex = (rowA, rowB, col) => {\n  const a = rowA.values[col];\n  const b = rowB.values[col];\n  let result = compareBasic(a, b);\n  return result === 0\n    ? compareBasic(rowA.values.index, rowB.values.index)\n    : result;\n};\n\nfunction Table({ columns, data, limit }) {\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n  } = useTable(\n    {\n      columns,\n      data,\n      initialState: {\n        sortBy: [\n          {\n            id: \"median\",\n            desc: false,\n          },\n        ],\n      },\n    },\n    useSortBy\n  );\n\n  const firstPageRows = rows.slice(0, limit);\n\n  return (\n    <>\n      <BootyTable size=\"sm\" {...getTableProps()}>\n        <thead>\n          {headerGroups.map((headerGroup) => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              <th> #</th>\n              {headerGroup.headers.map((column) => (\n                // Add the sorting props to control sorting. For this example\n                // we can add them into the header props\n                <th {...column.getHeaderProps(column.getSortByToggleProps())}>\n                  <FontAwesomeIcon\n                    style={{ float: \"right\", marginLeft: 5, marginTop: 2 }}\n                    icon={\n                      column.isSorted\n                        ? column.isSortedDesc\n                          ? faSortDown\n                          : faSortUp\n                        : faSort\n                    }\n                  />\n                  {column.render(\"Header\")}\n                  {/* Add a sort direction indicator */}\n                </th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {firstPageRows.map((row, i) => {\n            prepareRow(row);\n            return (\n              <tr {...row.getRowProps()}>\n                <td>{i + 1}</td>\n                {row.cells.map((cell) => {\n                  return (\n                    <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\n                  );\n                })}\n              </tr>\n            );\n          })}\n        </tbody>\n      </BootyTable>\n      <br />\n      {Math.min(limit, rows.length) !== rows.length ? (\n        <div>\n          Showing the first {Math.min(limit, rows.length)} of {rows.length} rows\n        </div>\n      ) : null}\n    </>\n  );\n}\n\nexport default function Rankings() {\n  const { width } = useWindowDimensions();\n  let { size } = useParams();\n  const url = `${PUBLIC_URL}rankings.json`;\n  const { response, loading } = useFetch(url);\n  let initialState = _.isEmpty(size)\n    ? {\n        xsmall: false,\n        small: true,\n        medium: true,\n        large: true,\n      }\n    : {\n        xsmall: size === \"xsmall\",\n        small: size === \"small\",\n        medium: size === \"medium\",\n        large: size === \"large\",\n      };\n  const [xsmall, setXSmall] = useState(initialState.xsmall);\n  const [small, setSmall] = useState(initialState.small);\n  const [medium, setMedium] = useState(initialState.medium);\n  const [large, setLarge] = useState(initialState.large);\n\n  if (loading) {\n    return <Loading />;\n  }\n  const location_code_map = response.location_code_map;\n  const columns = [\n    {\n      accessor: \"fo_name\",\n      Cell: ({ value }) => (\n        <LinkContainer\n          to={`/field_offices/${location_code_map[value]}/${slugify(value)}`}\n        >\n          <Button className=\"tight dark\" variant=\"link\">\n            {value}\n          </Button>\n        </LinkContainer>\n      ),\n      Header: \"Name\",\n    },\n    {\n      accessor: \"median\",\n      Cell: ({ value }) => (\n        <div className=\"text-right\">{value ? value.toFixed(1) : null}</div>\n      ),\n      Header: (\n        <div style={{ float: \"right\" }} className=\"text-right\">\n          Median time in months\n        </div>\n      ),\n      sortType: sortByValueThenOrigIndex,\n    },\n    {\n      accessor: \"max\",\n      Cell: ({ value }) => (\n        <div className=\"text-right\">{value ? value.toFixed(1) : null}</div>\n      ),\n      Header: (\n        <div style={{ float: \"right\" }} className=\"text-right\">\n          Top 90% time in months\n        </div>\n      ),\n      sortType: sortByValueThenOrigIndex,\n    },\n    {\n      accessor: \"size\",\n      Cell: ({ value }) => (\n        <div className=\"text-right\">{value ? value.toFixed(0) : null}</div>\n      ),\n      Header: (\n        <div style={{ float: \"right\" }} className=\"text-right\">\n          GCs approved\n        </div>\n      ),\n      sortType: sortByValueThenOrigIndex,\n    },\n    {\n      accessor: \"size_label\",\n      Cell: ({ value }) => (\n        <div className=\"text-right\">{SIZE_BADGE_MAP[value]}</div>\n      ),\n      Header: <div className=\"text-right\"></div>,\n      disableSortBy: true,\n    },\n  ];\n  const SIZE_BADGE_MAP = {\n    xsmall: <Badge variant=\"light\">XS</Badge>,\n    small: <Badge variant=\"success\">S</Badge>,\n    medium: <Badge variant=\"warning\">M</Badge>,\n    large: <Badge variant=\"danger\">L</Badge>,\n  };\n  const sizes = _.filter([\n    xsmall ? \"xsmall\" : null,\n    small ? \"small\" : null,\n    medium ? \"medium\" : null,\n    large ? \"large\" : null,\n  ]);\n  let data = _.filter(response.info, (row) =>\n    _.includes(sizes, row.size_label)\n  );\n\n  return (\n    <WidthLimitedLayout>\n      <div id=\"rankings\">\n        <h1>Rankings</h1>\n\n        <div style={{ paddingBottom: 10 }}>\n          <div>\n            This table ranks Field Offices by how quickly different Field\n            Offices approve Green Cards. Times are months between estimated\n            I-485 receipt and approval. <br />\n            The <strong>Median</strong> processing time is an estimate for an\n            average case. It indicates a timeframe where 50% of approvals were\n            faster than that, and 50% were slower. <br />\n            The <strong>Top 90%</strong> processing time is an estimate for a\n            slow case. It indicates a timeframe where 90% of approvals were\n            faster than that, and 10% were slower. All data is for I-485\n            approvals in the last 90 days. <br />\n            Field Offices are grouped into 4 roughly equally sized groups (\n            {SIZE_BADGE_MAP[\"large\"]}\n            {SIZE_BADGE_MAP[\"medium\"]}\n            {SIZE_BADGE_MAP[\"small\"]}\n            {SIZE_BADGE_MAP[\"xsmall\"]}) depending on how many Green Cards\n            they've approved recently.\n          </div>\n        </div>\n        <Form>\n          <Form.Label className=\"my-1 mr-2\">Field Office Sizes:</Form.Label>\n\n          <Form.Check\n            inline\n            type=\"checkbox\"\n            id=\"large\"\n            checked={large}\n            onChange={(event) => setLarge(event.target.checked)}\n            label={\n              <span>\n                {SIZE_BADGE_MAP[\"large\"]}\n                {width < 1024 ? \"\" : \" Large\"}\n              </span>\n            }\n          />\n          <Form.Check\n            inline\n            type=\"checkbox\"\n            id=\"medium\"\n            checked={medium}\n            onChange={(event) => setMedium(event.target.checked)}\n            label={\n              <span>\n                {SIZE_BADGE_MAP[\"medium\"]}\n                {width < 1024 ? \"\" : \" Medium\"}\n              </span>\n            }\n          />\n          <Form.Check\n            inline\n            type=\"checkbox\"\n            id=\"small\"\n            checked={small}\n            onChange={(event) => setSmall(event.target.checked)}\n            label={\n              <span>\n                {SIZE_BADGE_MAP[\"small\"]}\n                {width < 1024 ? \"\" : \" Small\"}\n              </span>\n            }\n          />\n          <Form.Check\n            inline\n            type=\"checkbox\"\n            id=\"xsmall\"\n            checked={xsmall}\n            onChange={(event) => setXSmall(event.target.checked)}\n            label={\n              <span>\n                {SIZE_BADGE_MAP[\"xsmall\"]}\n                {width < 1024 ? \"\" : \" Very Small\"}\n              </span>\n            }\n          />\n        </Form>\n\n        <Table columns={columns} data={data} limit={width < 1024 ? 100 : 100} />\n        {DISCLAIMER}\n      </div>\n    </WidthLimitedLayout>\n  );\n}\n","import React from \"react\";\n\nimport _ from \"lodash\";\nimport { Loading, PUBLIC_URL, DISCLAIMER } from \"./Statics.js\";\nimport useFetch from \"./useFetch.js\";\nimport ReadMore from \"./ReadMore.js\";\nimport { WidthLimitedLayoutBigger } from \"./util.js\";\n\nimport \"./App.css\";\n\nimport { Table as BootyTable, Form, Pagination } from \"react-bootstrap\";\nimport {\n  useTable,\n  useSortBy,\n  usePagination,\n  useFilters,\n  useGlobalFilter,\n  useAsyncDebounce,\n} from \"react-table\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faSort,\n  faSortUp,\n  faSortDown,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nfunction compareBasic(a, b) {\n  return a === b ? 0 : a > b ? 1 : -1;\n}\n\nlet medianReceiptDate = (rows) => {\n  if (rows.length === 0) {\n    return \"None\";\n  }\n  let dates = _.map(rows, \"original.received_dt\");\n  dates.sort();\n  const mid = Math.floor(dates.length / 2);\n  if (dates.length % 2 === 1) {\n    return dates[mid];\n  } else {\n    const mid_before = mid - 1;\n    const date_1 = new Date(dates[mid]);\n    const date_2 = new Date(dates[mid_before]);\n    const result = new Date((date_1.getTime() + date_2.getTime()) / 2);\n    return result.toISOString().split(\"T\")[0];\n  }\n};\n\nlet sortByValueThenOrigIndex = (rowA, rowB, col, desc) => {\n  // If we're sorting by ascending we have to replace \"\" or null\n  // with something that'll sort that value to the bottom\n  const a = rowA.values[col];\n  const b = rowB.values[col];\n  const replVal = desc ? \"\" : \"ZZZ\";\n  return compareBasic(a ? a : replVal, b ? b : replVal);\n};\n\n// Define a default UI for filtering\nfunction GlobalFilter({ globalFilter, setGlobalFilter }) {\n  const [value, setValue] = React.useState(globalFilter);\n  const onChange = useAsyncDebounce((value) => {\n    setGlobalFilter(value || undefined);\n  }, 200);\n\n  return (\n    <>\n      <Form.Label className=\"my-1 mr-2 form-label-case-samples\">\n        Petition Types:\n      </Form.Label>\n\n      <Form.Check\n        inline\n        type=\"checkbox\"\n        id=\"I485-check-box\"\n        checked={value === \"I-485\"}\n        onChange={(event) => {\n          const newVal = event.target.checked ? \"I-485\" : null;\n          setValue(newVal);\n          onChange(newVal);\n        }}\n        label={\n          <span className=\"form-check-label-case-samples\">\n            I-485 Green Card\n          </span>\n        }\n      />\n      <Form.Check\n        inline\n        type=\"checkbox\"\n        id=\"I765-check-box\"\n        checked={value === \"I-765\"}\n        onChange={(event) => {\n          const newVal = event.target.checked ? \"I-765\" : null;\n          setValue(newVal);\n          onChange(newVal);\n        }}\n        label={\n          <span className=\"form-check-label-case-samples\">\n            I-765 Work Permit\n          </span>\n        }\n      />\n      <Form.Check\n        inline\n        type=\"checkbox\"\n        id=\"I751-check-box\"\n        checked={value === \"I-751\"}\n        onChange={(event) => {\n          const newVal = event.target.checked ? \"I-751\" : null;\n          setValue(newVal);\n          onChange(newVal);\n        }}\n        label={\n          <span className=\"form-check-label-case-samples\">\n            I-751 Removal of Conditions\n          </span>\n        }\n      />\n    </>\n  );\n}\n\n// Define a default UI for filtering\nfunction DefaultColumnFilter({\n  column: { filterValue, preFilteredRows, setFilter },\n}) {\n  const count = preFilteredRows.length;\n\n  return (\n    <input\n      style={{ width: 150 }}\n      value={filterValue || \"\"}\n      onChange={(e) => {\n        setFilter(e.target.value || undefined); // Set undefined to remove the filter entirely\n      }}\n      placeholder={`Search records...`}\n    />\n  );\n}\n\nfunction Table({ columns, data, limit }) {\n  const filterTypes = React.useMemo(\n    () => ({\n      // Add a new fuzzyTextFilterFn filter type.\n      // fuzzyText: fuzzyTextFilterFn,\n      // Or, override the default text filter to use\n      // \"startWith\"\n      text: (rows, id, filterValue) => {\n        return rows.filter((row) => {\n          const rowValue = row.values[id];\n          return rowValue !== undefined\n            ? String(rowValue)\n                .toLowerCase()\n                .startsWith(String(filterValue).toLowerCase())\n            : true;\n        });\n      },\n    }),\n    []\n  );\n\n  const defaultColumn = React.useMemo(\n    () => ({\n      // Let's set up our default Filter UI\n      Filter: DefaultColumnFilter,\n    }),\n    []\n  );\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    page, // Instead of using 'rows', we'll use page,\n    // which has only the rows for the active page\n\n    // The rest of these things are super handy, too ;)\n    canPreviousPage,\n    canNextPage,\n    pageOptions,\n    pageCount,\n    gotoPage,\n    nextPage,\n    previousPage,\n    setPageSize,\n    state: { pageIndex, pageSize, globalFilter },\n    visibleColumns,\n    preGlobalFilteredRows,\n    setGlobalFilter,\n  } = useTable(\n    {\n      columns,\n      data,\n      defaultColumn, // Be sure to pass the defaultColumn option\n      filterTypes,\n      initialState: {\n        pageSize: 20,\n        globalFilter: \"I-485\",\n        hiddenColumns: [\"petition_type\"],\n        sortBy: [\n          {\n            id: \"received_dt\",\n            desc: false,\n          },\n        ],\n      },\n    },\n    useFilters,\n    useGlobalFilter,\n    useSortBy,\n    usePagination\n  );\n\n  return (\n    <>\n      <div className=\"results-count-case-samples \">\n        Showing {rows.length} results | Median Receipt date:{\" \"}\n        {medianReceiptDate(rows)}\n      </div>\n      <BootyTable size=\"sm\" {...getTableProps()}>\n        <thead>\n          <tr>\n            <th\n              colSpan={visibleColumns.length}\n              style={{\n                textAlign: \"left\",\n                border: 0,\n              }}\n            >\n              <GlobalFilter\n                preGlobalFilteredRows={preGlobalFilteredRows}\n                globalFilter={globalFilter}\n                setGlobalFilter={setGlobalFilter}\n              />\n            </th>\n          </tr>\n          {headerGroups.map((headerGroup) => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map((column) => (\n                // Add the sorting props to control sorting. For this example\n                // we can add them into the header props\n                <th\n                  style={{\n                    verticalAlign: \"top\",\n                  }}\n                >\n                  <div\n                    {...column.getHeaderProps(column.getSortByToggleProps())}\n                  >\n                    <FontAwesomeIcon\n                      style={{ float: \"right\", marginLeft: 5, marginTop: 2 }}\n                      icon={\n                        column.isSorted\n                          ? column.isSortedDesc\n                            ? faSortDown\n                            : faSortUp\n                          : faSort\n                      }\n                    />\n                    {column.render(\"Header\")}\n                  </div>\n                  {/* Add a sort direction indicator */}\n                  <div>{column.canFilter ? column.render(\"Filter\") : null}</div>\n                </th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {page.map((row, i) => {\n            prepareRow(row);\n            return (\n              <tr {...row.getRowProps()}>\n                {row.cells.map((cell) => {\n                  return (\n                    <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\n                  );\n                })}\n              </tr>\n            );\n          })}\n        </tbody>\n      </BootyTable>\n\n      <div style={{ display: \"flex\" }}>\n        <Pagination>\n          <Pagination.First\n            onClick={() => gotoPage(0)}\n            disabled={!canPreviousPage}\n          >\n            First\n          </Pagination.First>\n          <Pagination.Prev\n            onClick={() => previousPage()}\n            disabled={!canPreviousPage}\n          >\n            Previous\n          </Pagination.Prev>\n          <Pagination.Next onClick={() => nextPage()} disabled={!canNextPage}>\n            Next\n          </Pagination.Next>\n          <Pagination.Last\n            onClick={() => gotoPage(pageCount - 1)}\n            disabled={!canNextPage}\n          >\n            Last\n          </Pagination.Last>\n        </Pagination>\n        <div\n          style={{\n            display: \"flex\",\n          }}\n        >\n          <div style={{ width: 220, marginLeft: \"10px\", marginTop: \"5px\" }}>\n            Page{\" \"}\n            <strong>\n              {pageIndex + 1} of {pageOptions.length}\n            </strong>\n          </div>\n          <select\n            value={pageSize}\n            onChange={(e) => {\n              setPageSize(Number(e.target.value));\n            }}\n            className=\"form-control\"\n          >\n            {[10, 20, 30, 40, 50].map((pageSize) => (\n              <option key={pageSize} value={pageSize}>\n                Show {pageSize}\n              </option>\n            ))}\n          </select>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default function CaseSamples() {\n  const url = `${PUBLIC_URL}case_samples.json`;\n  const { response, loading } = useFetch(url);\n\n  if (loading) {\n    return <Loading />;\n  }\n  const columns = [\n    {\n      accessor: \"received_dt\",\n      Header: \"Received\",\n      sortType: sortByValueThenOrigIndex,\n    },\n    {\n      accessor: \"petition_type\",\n      Header: \"Petition Type\",\n      sortType: sortByValueThenOrigIndex,\n    },\n    {\n      accessor: \"fo_name\",\n      Header: \"Field Office\",\n      sortType: sortByValueThenOrigIndex,\n    },\n    {\n      accessor: \"FINGERPRINTS_APPLIED\",\n      Header: \"Fingerprints\",\n      sortType: sortByValueThenOrigIndex,\n    },\n    {\n      accessor: \"READY_FOR_INTERVIEW\",\n      Header: \"Ready For Interview\",\n      sortType: sortByValueThenOrigIndex,\n    },\n    {\n      accessor: \"INTERVIEW_SCHEDULED\",\n      Header: \"Interview Scheduled\",\n      sortType: sortByValueThenOrigIndex,\n    },\n    {\n      accessor: \"CARD_MAILED\",\n      Header: \"Card Mailed\",\n      sortType: sortByValueThenOrigIndex,\n    },\n  ];\n\n  return (\n    <WidthLimitedLayoutBigger>\n      <h1>Case Samples</h1>\n\n      <div style={{ paddingBottom: 10, maxWidth: 850 }}>\n        <div>\n          This table shows a ~10% sample of Green Card & Work Permit applications\n          approved in the last 90 days.\n          <ReadMore>\n            Data is sorted by estimated \"Receipt Date\" in ascending order, which\n            means the oldest cases appear first.\n            <br />\n            Empty columns might mean that the status did not appear for the case\n            or that it is missing from the dataset. The data is incomplete\n            especially for events before December 2020.\n            <br />\n            Every column exposes full-text search which means you can enter e.g.\n            \", CA\" into \"Field Office\" to search for cases in California, or \"-\"\n            into \"Ready For Interview\" for Cases with this event on them.\n            <br />\n            Cases will generally have their \"Field Office\" field filled out 1-2\n            weeks after the card has been sent out (and so Field Office\n            information is missing on the most recent cases).\n          </ReadMore>\n        </div>\n      </div>\n      <div style={{ overflowX: \"scroll\" }}>\n        <Table columns={columns} data={response.info} />\n      </div>\n      {DISCLAIMER}\n    </WidthLimitedLayoutBigger>\n  );\n}\n","import _ from 'lodash';\nimport { Table } from \"react-bootstrap\";\nexport default function JSONTable({ columns, rows, ...other }) {\n  return (\n    <Table {...other}>\n      <thead>\n        <tr>\n          {_.map(columns, (col) => {\n            return <th key={col}>{col.toUpperCase()}</th>;\n          })}\n        </tr>\n      </thead>\n      <tbody>\n        {_.map(rows, (row) => {\n          return (\n            <tr key={row[0]}>\n              {_.map(columns, (col) => {\n                return <td key={col}>{row[col]}</td>;\n              })}\n            </tr>\n          );\n        })}\n      </tbody>\n    </Table>\n  );\n}\n","import _ from \"lodash\";\nimport { Plot } from \"./Statics.js\";\nexport default function SparkLines({\n  values,\n  lookback_ago,\n  ago_value,\n  sparkWidth,\n}) {\n  let spark_values = _.slice(values, lookback_ago);\n  spark_values = _.at(\n    spark_values,\n    _.range(0, lookback_ago, Math.floor(lookback_ago / 8))\n  );\n  spark_values = _.map(spark_values, (x) => x / ago_value);\n  if (_.max(spark_values) > 2) {\n    spark_values = _.map(spark_values, (x) => x * (2 / _.max(spark_values)));\n  }\n  return (\n    <Plot\n      data={[\n        {\n          y: spark_values,\n          x: _.range(_.size(spark_values)),\n          type: \"scatter\",\n          mode: \"lines\",\n          line: {\n            color: \"rgb(99, 99, 99)\",\n          },\n        },\n      ]}\n      layout={{\n        showlegend: false,\n        width: sparkWidth,\n        height: 20,\n        margin: { l: 0, r: 0, t: 0, b: 0, pad: 0 },\n        xaxis: { visible: false },\n        yaxis: { visible: false, range: [0, 2] },\n      }}\n      config={{\n        displayModeBar: false,\n        showTips: false,\n        staticPlot: true,\n      }}\n    />\n  );\n}\n","import React from \"react\";\nimport SparkLines from \"./SparkLines.js\";\n\nimport _ from \"lodash\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { Table, Container, Row, Col } from \"react-bootstrap\";\nimport { Plot, DISCLAIMER } from \"./Statics.js\";\nimport { make_layout, WidthLimitedLayout } from \"./util.js\";\nimport ReactMarkdown from \"react-markdown\";\n\nlet pct = (i, prec = 2) => (i * 100).toFixed(prec) + \"%\";\n\nfunction CurrentlyProcessingTable({ data }) {\n  console.log(data);\n\n  let dt = (value) => {\n    if (!value) return \"\";\n    let d = new Date(value);\n    let ye = new Intl.DateTimeFormat(\"en\", { year: \"numeric\" }).format(d);\n    let mo = new Intl.DateTimeFormat(\"en\", { month: \"long\" }).format(d);\n    let da = new Intl.DateTimeFormat(\"en\", { day: \"2-digit\" }).format(d);\n    return `${mo} ${_.trimStart(da, \"0\")}, ${ye}`;\n  };\n\n  return (\n    <Container>\n      <Row>\n        <Col>\n          <ReactMarkdown\n            children={_.trim(`\n**I-130**:  \n\\`MSC:\\` ${dt(data[\"I-130\"][\"MSC\"])}  \n\\`LIN:\\` ${dt(data[\"I-130\"][\"LIN\"])}  \n\\`SRC:\\` ${dt(data[\"I-130\"][\"SRC\"])}  \n\\`WAC:\\` ${dt(data[\"I-130\"][\"WAC\"])}  \n\\`YSC:\\` ${dt(data[\"I-130\"][\"YSC\"])}  \n\n**I-140**:  \n\\`LIN:\\` ${dt(data[\"I-130\"][\"LIN\"])}  \n\\`SRC:\\` ${dt(data[\"I-130\"][\"SRC\"])}  \n\n**I-485**:  \n\\`MSC:\\` ${dt(data[\"I-485\"][\"MSC\"])}  \n\\`LIN:\\` ${dt(data[\"I-485\"][\"LIN\"])}  \n\\`SRC:\\` ${dt(data[\"I-485\"][\"SRC\"])}  \n\\`WAC:\\` ${dt(data[\"I-485\"][\"WAC\"])}  \n\\`EAC:\\` ${dt(data[\"I-485\"][\"EAC\"])}  \n`)}\n          />\n        </Col>\n        <Col>\n          <ReactMarkdown\n            children={_.trim(`\n**I-131**:  \n${dt(data[\"I-131\"][\"ALL\"])}  \n\n**I-765**:  \n${dt(data[\"I-765\"][\"ALL\"])}  \n\n**N-400**:  \n${dt(data[\"N-400\"][\"ALL\"])}  \n\n**I-751**:  \n\\`MSC:\\` ${dt(data[\"I-751\"][\"MSC\"])}  \n\\`EAC:\\` ${dt(data[\"I-485\"][\"EAC\"])}  \n\\`LIN:\\` ${dt(data[\"I-751\"][\"LIN\"])}  \n\\`SRC:\\` ${dt(data[\"I-751\"][\"SRC\"])}  \n\\`WAC:\\` ${dt(data[\"I-751\"][\"WAC\"])}  \n\\`YSC:\\` ${dt(data[\"I-751\"][\"YSC\"])}  \n`)}\n          />\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default function Home({ data, last_updated, width, stat }) {\n  stat = stat || \"gcs_mailed\";\n  let raw = data.raw[stat];\n  let rolling = data.rolling[stat];\n\n  let displayNames = {\n    cards_mailed: \"Cards Mailed\",\n    gcs_mailed: \"Green Cards Mailed\",\n    wps_mailed: \"Work Permits Mailed\",\n    i130s_approved: \"I-130s approved\",\n    approval_rate: \"Approval Rate\",\n  };\n\n  const LOOKBACK = 14;\n  const LOOKBACK_AGO = LOOKBACK * 2;\n\n  let plotData = [\n    {\n      x: _.keys(rolling),\n      y: _.values(rolling),\n      type: \"scatter\",\n      mode: \"lines\",\n      marker: { color: \"red\" },\n      name: `${LOOKBACK}-day average`,\n      line: { shape: \"hvh\" },\n    },\n    {\n      type: \"bar\",\n      x: _.keys(raw),\n      y: _.values(raw),\n      name: displayNames[stat],\n    },\n  ];\n\n  let layout = {\n    autosize: true,\n    legend: {\n      orientation: \"h\",\n      yanchor: \"bottom\",\n      y: 1.02,\n      xanchor: \"right\",\n      x: 1,\n    },\n    margin: {\n      l: 50,\n      r: 50,\n      b: 50,\n      t: 0,\n      pad: 4,\n    },\n  };\n\n  let sparkTdWidth = width < 1024 ? 100 : 180;\n  let sparkWidth = width < 1024 ? 50 : 100;\n\n  return (\n    <WidthLimitedLayout>\n      <div className=\"text-center\">\n        <h1>\n          Immigration in the U.S.:\n          <br />\n          Latest Processing Times\n        </h1>\n        <div>Updated {last_updated}</div>\n      </div>\n      <div>\n        <div style={{ height: 300 }}>\n          <Plot\n            data={plotData}\n            useResizeHandler={true}\n            style={{ width: \"100%\", height: \"100%\" }}\n            layout={make_layout(layout, width, \"home_plot\")}\n            config={{ displayModeBar: false, showTips: false }}\n          />\n        </div>\n        <Table size={width < 1024 ? \"sm\" : \"\"}>\n          <thead>\n            <tr>\n              <th></th>\n              <th>DAILY AVG.</th>\n              <th>{LOOKBACK_AGO}-DAY CHANGE</th>\n            </tr>\n          </thead>\n          <tbody>\n            {_.map(displayNames, (displayName, stat_name) => {\n              let stat_map = data.rolling[stat_name];\n\n              let values = _.values(stat_map);\n              let cur_value = _.nth(values, -1);\n              let ago_value = _.nth(values, -LOOKBACK_AGO - 1);\n              let change = cur_value / ago_value - 1;\n\n              let formatted_cur_value =\n                stat_name === \"approval_rate\"\n                  ? pct(cur_value, 0)\n                  : cur_value.toFixed(0);\n\n              let change_plus = change >= 0 ? \"+\" : \"\";\n\n              return (\n                <tr key={stat_name}>\n                  <td\n                    style={\n                      width < 768\n                        ? {\n                            letterSpacing: \"-0.4px\",\n                            fontSize: \"80%\",\n                            fontWeight: 400,\n                          }\n                        : null\n                    }\n                  >\n                    <LinkContainer\n                      exact\n                      to={`/latest/${stat_name}`}\n                      activeClassName=\"active\"\n                      className=\"stat-link\"\n                    >\n                      <a>\n                        <strong>{displayName}</strong>\n                      </a>\n                    </LinkContainer>\n                  </td>\n                  <td>\n                    <strong>{formatted_cur_value}</strong>\n                  </td>\n                  <td style={{ position: \"relative\", minWidth: sparkTdWidth }}>\n                    <span>\n                      {change_plus}\n                      {pct(change, 0)}\n                    </span>\n                    <span style={{ position: \"absolute\", left: 65, top: 7 }}>\n                      <SparkLines\n                        values={values}\n                        lookback_ago={LOOKBACK_AGO}\n                        ago_value={ago_value}\n                        sparkWidth={sparkWidth}\n                      />\n                    </span>\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </Table>\n        <small>\n          The daily average is calculated from the past {LOOKBACK} days. Data is\n          updated every day in the mornings (ET). Data for the past 6 days is\n          estimated from partial data, and might shift around a bit until it\n          settles after 6 days.\n        </small>\n      </div>\n      <hr />\n      <div style={{ marginTop: 30 }}>\n        <div className=\"text-center\">\n          <h3>Currently Processing</h3>\n          <p>\n            The below are median receipt dates for cases approved in the last 90\n            days.\n          </p>\n        </div>\n        <CurrentlyProcessingTable data={data.currently_processing_table} />\n        <Container>\n          <Row>\n            <Col>\n              <ReactMarkdown\n                children={_.trim(`\n**Legend:**  \n\\`MSC:\\` National Benefits Center  \n\\`EAC:\\` Vermont Service Center (used to be the Eastern Adjudication Center)  \n\\`WAC:\\` California Service Center (used to be the Western Adjudication Center)  \n\\`LIN:\\` Nebraska Service Center  \n\\`SRC:\\` Texas Service Center (used to be the Southern Regional Center)  \n\\`YSC:\\` Potomac Service Center  \n            `)}\n              />\n            </Col>\n          </Row>\n        </Container>\n      </div>\n      {DISCLAIMER}\n    </WidthLimitedLayout>\n  );\n}\n","import React from \"react\";\nimport ReactMarkdown from \"react-markdown\";\n\nimport _ from \"lodash\";\nimport { useParams } from \"react-router-dom\";\nimport { Alert, Jumbotron } from \"react-bootstrap\";\nimport JSONTable from \"./JSONTable.js\";\n\nimport {\n  Plot,\n  Loading,\n  FORM_LONG_NAMES,\n  FORM_DESCRIPTIONS,\n  DISCLAIMER,\n  PUBLIC_URL,\n} from \"./Statics.js\";\nimport useWindowDimensions from \"./useWindowDimensions.js\";\nimport useFetch from \"./useFetch.js\";\nimport Home from \"./Home.js\";\nimport { trimLines, make_layout, plot_visible, WidthLimitedLayout } from \"./util.js\";\n\nexport default function RenderForm() {\n  const { width } = useWindowDimensions();\n  let { form, stat } = useParams();\n  const url = `${PUBLIC_URL}${form}.json`;\n\n  const { response, loading } = useFetch(url);\n\n  if (loading || _.isEmpty(response.form)) {\n    return <Loading />;\n  }\n\n  if (response.form === \"latest\") {\n    return (\n      <Home\n        data={response.data}\n        last_updated={response.last_updated}\n        width={width}\n        stat={stat}\n      />\n    );\n  }\n\n  return render_form(response.form, response.data, width);\n}\n\nfunction render_jumbo(form) {\n  return (\n    <Jumbotron>\n      <h2>{FORM_LONG_NAMES[form]}</h2>\n      {FORM_DESCRIPTIONS[form]}\n    </Jumbotron>\n  );\n}\nfunction render_form(form, data, width) {\n  let rendered_graphs = _.map(data, (form_data) => {\n    if (!plot_visible(form, form_data.id, width)) return null;\n    if (form_data.id === \"I-131\") return render_jumbo(\"I-131\");\n    let fig = JSON.parse(form_data.figure);\n    let sub_render = null;\n    sub_render = render_sub_table(form_data.sub_table, form, form_data.id);\n    let all_annotations = _.get(fig, \"layout.annotations\", []);\n    let annotations = _.filter(all_annotations, { visible: false });\n\n    return (\n      <div key={form_data.id}>\n        <h5>{form_data.title}</h5>\n        <Plot\n          data={fig.data}\n          layout={make_layout(fig.layout, width, form_data.id)}\n          style={form_data.style || {}}\n          config={{ displayModeBar: false, showTips: false }}\n        />\n        {_.map(annotations, (ann, i) => {\n          return <ReactMarkdown key={i} children={trimLines(ann.text)} />;\n        })}\n        {sub_render}\n        <hr />\n      </div>\n    );\n  });\n\n  return (\n    <WidthLimitedLayout>\n      {form === \"I-765\" ? (\n        <Alert variant=\"success\">\n          The Forms for the Work Permit (I-765) and Advance Parole (I-131) are\n          combined on this page. Most people apply for both simultaneously, so\n          the processing times and approval rates are similar.\n        </Alert>\n      ) : null}\n\n      {render_jumbo(form)}\n      {rendered_graphs}\n      {DISCLAIMER}\n    </WidthLimitedLayout>\n  );\n}\n\nfunction render_sub_table(sub_table, form, id) {\n  if (_.isEmpty(sub_table)) return null;\n  let name = id === \"status_box_plot\" ? \"Status\" : \"Service Center\";\n\n  return (\n    <div>\n      <p>\n        {`This chart groups processing times for Form ${form} by ${name}.\n  The \"Processing Times\" column in the table below shows the median and max quantiles, i.e.\n  between the top 50% fastest case and the top 90% fastest case.`}\n      </p>\n      <JSONTable\n        rows={sub_table}\n        columns={[name, \"# of Cases\", \"Processing Times\"]}\n        size=\"sm\"\n        bordered\n      />\n    </div>\n  );\n}\n","import { Switch, Route, Redirect } from \"react-router-dom\";\nimport About from \"./About.js\";\nimport { FieldOffices, FieldOfficesRedirect } from \"./FieldOffices.js\";\nimport Rankings from \"./Rankings.js\";\nimport CaseSamples from \"./CaseSamples.js\";\nimport RenderForm from \"./RenderForm.js\";\n\nexport default function Routes() {\n  return (\n    <Switch>\n      <Route path=\"/about\">\n        <About />\n      </Route>\n      <Route path=\"/rankings/:size\">\n        <Rankings />\n      </Route>\n      <Route path=\"/rankings\">\n        <Rankings />\n      </Route>\n      <Route path=\"/case_samples\">\n        <CaseSamples />\n      </Route>\n      <Route exact path=\"/\">\n        <Redirect to=\"/latest/cards_mailed\" />\n      </Route>\n      <Route exact path=\"/latest/latest\">\n        <Redirect to=\"/\" />\n      </Route>\n      <Route\n        exact\n        path=\"/field_offices\"\n        render={(props) => <FieldOfficesRedirect />}\n      ></Route>\n      <Route path=\"/field_offices/:location_code/:fo_name\">\n        <FieldOffices />\n      </Route>\n      <Route path=\"/:form/:stat\">\n        <RenderForm />\n      </Route>\n      <Route path=\"/:form\">\n        <RenderForm />\n      </Route>\n    </Switch>\n  );\n}\n","import React, { useState, useRef } from \"react\";\nimport jsonp from \"jsonp\";\nimport { YMInitializer } from \"react-yandex-metrika\";\nimport useWindowDimensions from \"./useWindowDimensions.js\";\n\nimport { HashRouter as Router } from \"react-router-dom\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport {\n  Navbar,\n  Nav,\n  Form,\n  FormControl,\n  Button,\n  Container,\n} from \"react-bootstrap\";\nimport Routes from \"./Routes.js\";\n\nimport { ALL_FORM_TYPES } from \"./Statics.js\";\n\nimport \"./App.css\";\n\nconst FORM_NAV_DISPLAY = {\n  \"I-485\": \"Green Cards\",\n  \"I-765\": \"Work & Travel Cards\",\n};\n\nfunction BottomNav() {\n  const { width } = useWindowDimensions();\n  console.log(localStorage.getItem(\"hideEmailSub\"));\n  let [hidden, setHidden] = useState(\n    localStorage.getItem(\"hideEmailSub\") === \"true\"\n  );\n  if (hidden) {\n    return null;\n  }\n  let hide = () => {\n    localStorage.setItem(\"hideEmailSub\", \"true\");\n    setHidden(true);\n  };\n  return (\n    <Navbar fixed={width < 1024 ? null : \"bottom\"} bg=\"dark\" variant=\"dark\">\n      <Container\n        style={{\n          justifyContent: \"center\",\n          flexWrap: width < 1024 ? \"wrap\" : \"no-wrap\",\n          paddingTop: width < 768 ? null : 10,\n          paddingBottom: 10,\n        }}\n      >\n        <Navbar.Text style={{ margin: \"0 20px\", color: \"white\" }}>\n          Get a weekly email with new {width < 1024 ? \"GC\" : \"Green Card\"}{\" \"}\n          Processing Times\n        </Navbar.Text>\n        <div id=\"nav-email-form\">\n          <EmailForm hide={hide} />\n          <button type=\"button\" className=\"close\" onClick={hide}>\n            <span aria-hidden=\"true\">×</span>\n            <span className=\"sr-only\">Close alert</span>\n          </button>\n        </div>\n      </Container>\n    </Navbar>\n  );\n}\n\nfunction EmailForm({ hide }) {\n  let email_ref = useRef(null);\n\n  let onSubmit = (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    let BASE =\n      \"//greencardly.us7.list-manage.com/subscribe/post-json?u=f4841bf500160eb3d55b575eb&amp;id=e7c0544b8e\";\n    jsonp(\n      `${BASE}&EMAIL=${encodeURIComponent(email_ref.current.value)}`,\n      {\n        param: \"c\",\n      },\n      function (err, data) {\n        if (err) {\n          console.error(err.message);\n        } else {\n          alert(\n            \"Thanks for subscribing! :) To complete the subscription process, please click the link in the email we just sent you.\"\n          );\n          console.log(data);\n          hide();\n        }\n      }\n    );\n  };\n\n  return (\n    <Form inline onSubmit={onSubmit}>\n      <FormControl\n        type=\"email\"\n        placeholder=\"Email\"\n        className=\"mr-sm-2\"\n        ref={email_ref}\n      />\n      <Button variant=\"outline-danger\" type=\"submit\">\n        Subscribe\n      </Button>\n    </Form>\n  );\n}\n\nexport default function App() {\n  return (\n    <div>\n      <Router>\n        <div>\n          <Navbar\n            variant=\"dark\"\n            expand=\"lg\"\n            collapseOnSelect={true}\n            className=\"navbar-for-brand\"\n          >\n            <LinkContainer exact to=\"/\">\n              <Navbar.Brand>Greencardly</Navbar.Brand>\n            </LinkContainer>\n          </Navbar>\n          <Navbar variant=\"dark\" expand=\"lg\" collapseOnSelect={true}>\n            <Nav className=\"mr-auto\">\n              {ALL_FORM_TYPES.map((form) => {\n                return (\n                  <LinkContainer exact key={form} to={`/${form}`}>\n                    <Nav.Link>{FORM_NAV_DISPLAY[form] || form}</Nav.Link>\n                  </LinkContainer>\n                );\n              })}\n              <LinkContainer exact key=\"field_offices\" to=\"/field_offices\">\n                <Nav.Link>Field Offices</Nav.Link>\n              </LinkContainer>\n              <LinkContainer exact key=\"rankings\" to=\"/rankings\">\n                <Nav.Link>Rankings</Nav.Link>\n              </LinkContainer>\n              <LinkContainer exact key=\"case_samples\" to=\"/case_samples\">\n                <Nav.Link>Case Samples</Nav.Link>\n              </LinkContainer>\n\n              <LinkContainer exact key=\"about\" to=\"/about\">\n                <Nav.Link>About</Nav.Link>\n              </LinkContainer>\n            </Nav>\n          </Navbar>\n          <BottomNav />\n\n          <Routes />\n        </div>\n      </Router>\n      <YMInitializer accounts={[71610160]} version=\"2\" />\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}